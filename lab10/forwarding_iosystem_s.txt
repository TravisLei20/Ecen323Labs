 Address    Code        Basic                     Source

0x00000000  0x07f00193  addi x3,x0,0x0000007f 55       addi gp, x0, 0x7f
0x00000004  0x00800293  addi x5,x0,0x00000008 57       addi t0, x0, 8
0x00000008  0x003181b3  add x3,x3,x3          59       add gp, gp, gp
0x0000000c  0xfff28293  addi x5,x5,0xffffffff 60       addi t0, t0, -1
0x00000010  0x00028463  beq x5,x0,0x00000004  61       beq t0, x0, L2
0x00000014  0xfe000ae3  beq x0,x0,0xfffffffa  62       beq x0, x0, L1
0x00000018  0x04000213  addi x4,x0,0x00000040 68       addi tp, x0, 0x40
0x0000001c  0x00900293  addi x5,x0,0x00000009 70       addi t0, x0, 9
0x00000020  0x00420233  add x4,x4,x4          72       add tp, tp, tp
0x00000024  0xfff28293  addi x5,x5,0xffffffff 73       addi t0, t0, -1
0x00000028  0x00028463  beq x5,x0,0x00000004  74       beq t0, x0, L4
0x0000002c  0xfe000ae3  beq x0,x0,0xfffffffa  75       beq x0, x0, L3
0x00000030  0x0041a383  lw x7,0x00000004(x3)  83       lw t2, 0x4(gp)
0x00000034  0x7ff00293  addi x5,x0,0x000007ff 85       addi t0, x0, 0x7ff
0x00000038  0x005282b3  add x5,x5,x5          86       add t0, t0, t0     # ffe
0x0000003c  0x00128293  addi x5,x5,0x00000001 87       addi t0, t0, 1     # fff
0x00000040  0x0053f3b3  and x7,x7,x5          88       and t2, t2, t0
0x00000044  0xfff3ce13  xori x28,x7,0xffffffff90       xori t3, t2, -1
0x00000048  0x005e7e33  and x28,x28,x5        92       and t3, t3, t0
0x0000004c  0x00c00293  addi x5,x0,0x0000000c 94       addi t0, x0, 12
0x00000050  0x01ce0e33  add x28,x28,x28       96       add t3, t3, t3
0x00000054  0xfff28293  addi x5,x5,0xffffffff 97       addi t0, t0, -1
0x00000058  0x00028463  beq x5,x0,0x00000004  98       beq t0, x0, L4_2
0x0000005c  0xfe000ae3  beq x0,x0,0xfffffffa  99       beq x0, x0, L4_1
0x00000060  0x01c3e3b3  or x7,x7,x28          102      or t2, t2, t3
0x00000064  0x0271aa23  sw x7,0x00000034(x3)  103      sw t2, 0x34(gp)  # Write the new color values
0x00000068  0x02000293  addi x5,x0,0x00000020 106      addi t0, x0, 0x20       # ASCII character for space
0x0000006c  0x00400333  add x6,x0,x4          107      add t1, x0, tp                # Pointer to VGA space that will change
0x00000070  0x40000393  addi x7,x0,0x00000400 109      addi t2, x0, 0x400            # 0x400
0x00000074  0x007383b3  add x7,x7,x7          110      add t2, t2, t2                # 0x800
0x00000078  0x007383b3  add x7,x7,x7          111      add t2, t2, t2                # 0x1000
0x0000007c  0x00532023  sw x5,0x00000000(x6)  114      sw t0, 0(t1)
0x00000080  0xfff38393  addi x7,x7,0xffffffff 115      addi t2, t2, -1             # Decrement counter
0x00000084  0x00038663  beq x7,x0,0x00000006  116      beq t2, x0, L6              # Exit loop when done
0x00000088  0x00430313  addi x6,x6,0x00000004 117      addi t1, t1, 4              # Increment memory pointer by 4 to next character address
0x0000008c  0xfe0008e3  beq x0,x0,0xfffffff8  118      beq x0, x0, L5
0x00000090  0x00020413  addi x8,x4,0x00000000 122      addi s0, tp, 0              # s0: pointer to VGA locations
0x00000094  0x00000493  addi x9,x0,0x00000000 123      addi s1, x0, 0              # s1: current column
0x00000098  0x00000913  addi x18,x0,0x00000000124      addi s2, x0, 0              # s2: current row
0x0000009c  0x0001ac23  sw x0,0x00000018(x3)  126      sw x0, 0x18(gp)
0x000000a0  0x0001a023  sw x0,0x00000000(x3)  127      sw x0, 0x0(gp)
0x000000a4  0x08000663  beq x0,x0,0x00000046  129      beq x0, x0, DISPLAY_LOCATION
0x000000a8  0x0241a283  lw x5,0x00000024(x3)  135      lw t0, 0x24(gp)
0x000000ac  0x00500463  beq x0,x5,0x00000004  137      beq x0, t0, BTN_PRESS
0x000000b0  0xfe000ce3  beq x0,x0,0xfffffffc  138      beq x0, x0, BTN_RELEASE
0x000000b4  0x0241a283  lw x5,0x00000024(x3)  142      lw t0, 0x24(gp)
0x000000b8  0xfe500ee3  beq x0,x5,0xfffffffe  144      beq x0, t0, BTN_PRESS
0x000000bc  0x00100313  addi x6,x0,0x00000001 147      addi t1, x0, 0x01
0x000000c0  0xf66288e3  beq x5,x6,0xffffffb8  148      beq t0, t1, CLEAR_VGA
0x000000c4  0x00200313  addi x6,x0,0x00000002 154      addi t1, x0, 0x02
0x000000c8  0x02628a63  beq x5,x6,0x0000001a  155      beq t0, t1, PROCESS_BTNL
0x000000cc  0x00800313  addi x6,x0,0x00000008 156      addi t1, x0, 0x08
0x000000d0  0x00628c63  beq x5,x6,0x0000000c  157      beq t0, t1, PROCESS_BTNR
0x000000d4  0x01000313  addi x6,x0,0x00000010 158      addi t1, x0, 0x10
0x000000d8  0x02628a63  beq x5,x6,0x0000001a  159      beq t0, t1, PROCESS_BTNU
0x000000dc  0x00400313  addi x6,x0,0x00000004 160      addi t1, x0, 0x04
0x000000e0  0x02628e63  beq x5,x6,0x0000001e  161      beq t0, t1, PROCESS_BTND
0x000000e4  0xfc0002e3  beq x0,x0,0xffffffe2  164      beq x0, x0, BTN_RELEASE
0x000000e8  0x04d00293  addi x5,x0,0x0000004d 168      addi t0, x0, 77
0x000000ec  0xfa548ee3  beq x9,x5,0xffffffde  169      beq s1, t0, BTN_RELEASE                     # Ignore if on last column
0x000000f0  0x00148493  addi x9,x9,0x00000001 170      addi s1, s1, 1                              # Increment column
0x000000f4  0x00440413  addi x8,x8,0x00000004 171      addi s0, s0, 4                              # Increment pointer
0x000000f8  0x02000c63  beq x0,x0,0x0000001c  172      beq x0, x0, DISPLAY_LOCATION
0x000000fc  0xfa0486e3  beq x9,x0,0xffffffd6  176      beq s1, x0, BTN_RELEASE                     # Ignore if on first column
0x00000100  0xfff48493  addi x9,x9,0xffffffff 177      addi s1, s1, -1                             # Decrement column
0x00000104  0xffc40413  addi x8,x8,0xfffffffc 178      addi s0, s0, -4                             # Decrement pointer
0x00000108  0x02000463  beq x0,x0,0x00000014  179      beq x0, x0, DISPLAY_LOCATION
0x0000010c  0xf8090ee3  beq x18,x0,0xffffffce 183      beq s2, x0, BTN_RELEASE                     # Ignore if on first row
0x00000110  0xfff90913  addi x18,x18,0xfffffff184      addi s2, s2, -1                             # Decrement row
0x00000114  0xe0040413  addi x8,x8,0xfffffe00 185      addi s0, s0, -512          # Decrement pointer
0x00000118  0x00000c63  beq x0,x0,0x0000000c  186      beq x0, x0, DISPLAY_LOCATION
0x0000011c  0x01d00293  addi x5,x0,0x0000001d 190      addi t0, x0, 29
0x00000120  0xf85904e3  beq x18,x5,0xffffffc4 191      beq s2, t0, BTN_RELEASE                     # Ignore if on last row
0x00000124  0x00190913  addi x18,x18,0x0000000192      addi s2, s2, 1                              # Increment row
0x00000128  0x20040413  addi x8,x8,0x00000200 193      addi s0, s0, 512              # Increment pointer
0x0000012c  0x00000263  beq x0,x0,0x00000002  194      beq x0, x0, DISPLAY_LOCATION
0x00000130  0x0041a303  lw x6,0x00000004(x3)  198      lw t1, 0x4(gp)                    # Read the switches
0x00000134  0x00642023  sw x6,0x00000000(x8)  199      sw t1, 0(s0)                                # Write the character to the VGA
0x00000138  0x0081ac23  sw x8,0x00000018(x3)  202      sw s0, 0x18(gp)
0x0000013c  0x000482b3  add x5,x9,x0          204      add t0, s1, x0                              # Load s1 (column) to t0
0x00000140  0x005282b3  add x5,x5,x5          206      add t0, t0, t0
0x00000144  0x005282b3  add x5,x5,x5          207      add t0, t0, t0
0x00000148  0x005282b3  add x5,x5,x5          208      add t0, t0, t0
0x0000014c  0x005282b3  add x5,x5,x5          209      add t0, t0, t0
0x00000150  0x005282b3  add x5,x5,x5          210      add t0, t0, t0
0x00000154  0x005282b3  add x5,x5,x5          211      add t0, t0, t0
0x00000158  0x005282b3  add x5,x5,x5          212      add t0, t0, t0
0x0000015c  0x005282b3  add x5,x5,x5          213      add t0, t0, t0
0x00000160  0x0122e2b3  or x5,x5,x18          215      or t0, t0, s2
0x00000164  0x0051a023  sw x5,0x00000000(x3)  217      sw t0, 0x0(gp)
0x00000168  0xf40000e3  beq x0,x0,0xffffffa0  220      beq x0, x0, BTN_RELEASE
